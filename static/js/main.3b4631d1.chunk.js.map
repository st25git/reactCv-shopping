{"version":3,"sources":["apis.js","actions.js","Components/pages/Cart/index.jsx","Components/layout/header/index.jsx","Components/layout/footer/index.jsx","Components/layout/index.jsx","Atom/Productcard/index.jsx","Components/pages/Listpage/index.jsx","Components/pages/Homepage/Banner/Listbanner/index.jsx","Components/pages/Homepage/Banner/index.jsx","Components/pages/Homepage/index.jsx","Components/pages/Detailpage/DetailImages/index.jsx","Components/pages/Detailpage/index.jsx","Components/pages/Finishorder/index.jsx","App.js","serviceWorker.js","reducer.js","store.js","index.js"],"names":["IMAGE_URL","makeProductsApi","page","query","getProduct","product","errMsg","type","getProductsSucess","products","isFilter","getProductsFail","getProductsStart","isNewSearch","addToCart","index","quantity","addToCart_Detail","getIndexImage","indexImage","getEvent","dispatch","fetch","then","res","json","eventBanner","catch","err","console","error","getHomeApi","banner","data","list","log","getProducts","getDetailProduct","id","makeProductDetailApi","x","Array","isArray","Cart","React","Component","Header","state","searchByMostView","event","target","value","props","handleChange","setState","handleSearch","className","to","src","atl","onSubmit","placeholder","onChange","this","onClick","Button","variant","connect","minPrice","maxPrice","productBanner","bindActionCreators","Footer","Layout","status","style","width","children","Productcard","handleAddToCart","showRating","rating","result","i","push","icon","faStar","key","Math","random","z","round","faStarHalfAlt","j","img_url","name","percent_star","color","price","toLocaleString","category","cart","loginStatus","Listpage","map","item","Listbanner","itemBanner","image","Banner","Carousel","Item","title","Homepage","class","DetailImages","getImage","images","Detailpage","handleAddToCart_Detail","previousImage","length","nextImage","showRatingDetail","queryString","parse","window","location","search","Container","Row","Col","md","faChevronLeft","faChevronRight","rating_info","defaultProps","undefined","FinishOrder","App","Fragment","exact","path","component","Finishorder","Boolean","hostname","match","initialState","auth","isLogged","message","totalPriceOfProduct","quantityProduct","productEventBanner","reducer","action","newPBP","sort","a","b","newProducts","newProductsFFilter","filter","parseInt","newProductsSFilter","selected_Product","findIndex","indexOf","priceIndex","splice","middleware","getState","next","returnValue","thunk","enhancer","compose","applyMiddleware","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b4631d1.chunk.js","sourcesContent":["export const IMAGE_URL = 'https://media3.scdn.vn'\r\nexport const LINK_IMG = IMAGE_URL + '/img3/2019/12_10/7ThbzQ.jpg'\r\nexport const BASE_URL = 'https://mapi.sendo.vn'\r\nexport const HOME_API = 'https://cors-anywhere.herokuapp.com/https://mapi.sendo.vn/mob/home'\r\nexport const LOGIN_API = 'http://localhost:4000/login'\r\n\r\nexport const makeProductDetailApi = id =>{\r\n    return `https://cors-anywhere.herokuapp.com/${BASE_URL}/mob/product/${id}/detail/`\r\n}\r\n\r\nexport const makeProductsApi = (page,query)=>{\r\n    return `https://cors-anywhere.herokuapp.com/${BASE_URL}/mob/product/search?p=${page}&q=${query}`\r\n}","import { makeProductsApi, makeProductDetailApi, LOGIN_API, HOME_API } from \"./apis\";\r\n\r\n// ---- Filter ----- //\r\nexport const FILTER = 'FILTER';\r\nexport const filterPrice =(value , isFilter) => ({\r\n    type: FILTER,\r\n    value , isFilter\r\n})\r\n\r\n// ----- end ----- //\r\n\r\n// ----- get product <=> detail page  ----- //\r\nexport const GET_PRODUCT = 'GET_PRODUCT';\r\nexport const getProduct = (product, errMsg) => ({\r\n    type: GET_PRODUCT,\r\n    product, errMsg\r\n})\r\n\r\n// ----- end ----- //\r\n\r\n\r\n// ----- product list ----- //\r\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS';\r\nexport const getProductsSucess = (products, page, query ,isFilter) => ({\r\n    type: GET_PRODUCTS_SUCCESS,\r\n    products, page, query ,isFilter\r\n})\r\n// ----- end ---- //\r\n\r\n// ------ get failed ----- //\r\nexport const GET_PRODUCTS_FAIL = 'GET_PRODUCTS_FAIL';\r\nexport const getProductsFail = errMsg => ({\r\n    type: GET_PRODUCTS_FAIL,\r\n    errMsg\r\n})\r\n\r\nexport const GET_PRODUCT_FAIL = 'GET_PRODUCT_FAIL';\r\nexport const getProductFail = errMsg =>({\r\n    type : GET_PRODUCT_FAIL,\r\n    errMsg\r\n})\r\n\r\n// ----- end ----- //\r\n\r\n// ----- get product start <=> fetch first //\r\nexport const GET_PRODUCTS_START = 'GET_PRODUCTS_START';\r\nexport const getProductsStart = (isNewSearch) => ({\r\n    type: GET_PRODUCTS_START,\r\n    isNewSearch\r\n})\r\n\r\n// ----- end ----- //\r\n\r\n// ----- login ----- //\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const loginStart = () => ({\r\n    type: LOGIN_START\r\n})\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const loginSuccess = auth => ({\r\n    type: LOGIN_SUCCESS,\r\n    auth\r\n})\r\n\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const loginFail = (auth) => ({\r\n    type: LOGIN_FAIL,\r\n    auth\r\n})\r\n\r\nexport const LOGIN_RESET = 'LOGIN_RESET';\r\nexport const resetAuth = auth => ({\r\n    type: LOGIN_RESET,\r\n    auth\r\n})\r\n// ----- end ----- //\r\n\r\n// ----- cart ----- //\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const addToCart = (index, quantity = 1) => ({\r\n    type: ADD_TO_CART,\r\n    index, quantity\r\n})\r\n\r\nexport const dispatchCart = (cart) => {\r\n    return dispatch => {\r\n        dispatch(addToCart())\r\n            .fetch(cart)\r\n    }\r\n}\r\n\r\nexport const ADD_TO_CART_DETAIL = 'ADD_TO_CART_DETAIL'\r\nexport const addToCart_Detail = (product , quantity = 1) => ({\r\n    type: ADD_TO_CART_DETAIL,\r\n    product ,quantity\r\n})\r\n\r\nexport const dispatchCart_detail = (cart) => {\r\n    return dispatch => {\r\n        dispatch(addToCart_Detail())\r\n            .fetch(cart)\r\n    }\r\n}\r\n// ----- end ----- //\r\n\r\n// ----- filter product by price ----- //\r\nexport const GET_PRICE_PRODUCT = 'GET_PRICE'\r\nexport const getPrice = (priceIndex, index, quantity) => ({\r\n    type: GET_PRICE_PRODUCT,\r\n    priceIndex,\r\n    index, quantity\r\n})\r\n\r\n// ----- end ----- //\r\n\r\n// ----- delete product in cart ----- //\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT'\r\nexport const deleteProduct = (index) => ({\r\n    type: DELETE_PRODUCT,\r\n    index\r\n})\r\n\r\n// ----- end ----- //\r\n\r\n// ----- price by wish user ----- //\r\nexport const GET_MIN_PRICE = 'GET_MIN_PRICE'\r\nexport const getMinPrice = (minPrice)=>({\r\n    type : GET_MIN_PRICE,\r\n    minPrice\r\n})\r\n\r\nexport const GET_MAX_PRICE = 'GET_MAX_PRICE'\r\nexport const getMaxPrice = (maxPrice)=>({\r\n    type : GET_MAX_PRICE,\r\n    maxPrice\r\n})\r\n\r\n// ----- end ----- //\r\n\r\n// ----- show img detail product ----- //\r\nexport const GET_INDEX_IMAGE = 'GET_INDEX_IMAGE'\r\nexport const getIndexImage = (indexImage)=> ({\r\n    type: GET_INDEX_IMAGE,\r\n    indexImage\r\n}) \r\n\r\n// ----- end ----- //\r\n\r\n// ----- banner home page ----- //\r\nexport const GET_BANNER = 'GET_BANNER'\r\nexport const getBanner = (banner) =>({\r\n    type : GET_BANNER,\r\n    banner\r\n})\r\n// ----- end ----- //\r\n\r\n// ----- detail banner home page ----- //\r\nexport const GET_EVENT_BANNER = 'GET_EVENT_BANNER'\r\nexport const getEventBanner = eventBanner =>({\r\n    type : GET_EVENT_BANNER,\r\n    eventBanner\r\n})\r\n\r\n// ----- end ----- //\r\n\r\n// ----- action fetch detail banner home page ----- //\r\nexport const getEvent = ()=>{\r\n    return dispatch =>{\r\n        fetch('https://cors-anywhere.herokuapp.com/https://mapi.sendo.vn/mob/event/deal-soc-xe-may')\r\n        // fetch('https://cors-anywhere.herokuapp.com/https://mapi.sendo.vn/mob/event/${campaign_id}')\r\n     \r\n            .then(res => res.json())\r\n            .then(json =>{\r\n                dispatch(getEventBanner(json.product))\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n                dispatch(getProductsFail('rớt mạng rồi nè'))\r\n            })\r\n    }\r\n}\r\n// ----- end ----- //\r\n\r\n\r\n// ----- action get banner homepage ----- //\r\nexport const getHomeApi = () => {\r\n    return dispatch => {\r\n        fetch(HOME_API) // page , query\r\n            .then(res => res.json()) //=> promise 1 chiều\r\n            .then(json => {\r\n                //dispath\r\n                dispatch(getBanner(json[0].data.list))\r\n                console.log(json[0].data.list)\r\n                console.log(json[0].type)\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n                dispatch(getProductsFail('rớt mạng rồi nè'))\r\n            })\r\n    }\r\n}\r\n// ----- end ----- //\r\n\r\n// ----- action get product for website ------ //\r\nexport const getProducts = (query, page = 1, isNewSearch  = false , isFilter = false) => {\r\n    return dispatch => {\r\n        dispatch(getProductsStart(isNewSearch));\r\n        \r\n        // fetch(makeProductsApi(page, query))\r\n        fetch(makeProductsApi(page , query))\r\n         // page , query\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                //dispath\r\n                dispatch(getProductsSucess(json.data, page, query , isFilter))\r\n\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n                dispatch(getProductsFail('We have some problem about connecting'))\r\n            })\r\n    }\r\n}\r\n// ----- end ----- //\r\n\r\n// ----- action get detail product ------ //\r\nexport const getDetailProduct = (id) => {\r\n    return dispatch => {\r\n\r\n        fetch(makeProductDetailApi(id))\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let x = Array.isArray(json)\r\n                console.log(x)\r\n                if ( x == false){\r\n                    dispatch(getProduct(json))\r\n                }else{\r\n                    dispatch(getProductFail('Sorry about this problem but the product you want to buy can not found...'))\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n\r\n            })\r\n    }\r\n}\r\n// ----- end ----- //\r\n\r\n\r\n// ----- action login user ------ //\r\nexport const login = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(loginStart())\r\n        fetch(LOGIN_API, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username, password }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if (json.isLogged) {\r\n                    localStorage.setItem('AUTH', JSON.stringify(json))\r\n                    dispatch(loginSuccess(json))\r\n                }\r\n                else dispatch(loginFail(json))\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n                dispatch(loginFail({ message: err.message }))\r\n            })\r\n    }\r\n}\r\n\r\n// ----- end ----- //\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nclass Cart extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                heloo\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cart\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getProducts, getHomeApi, getEvent } from '../../../actions'\r\nimport { Button } from 'react-bootstrap'\r\nimport Cart from '../../pages/Cart'\r\nimport './index.scss'\r\nclass Header extends React.Component {\r\n  state = { query: '' }\r\n  searchByMostView = (event) => {\r\n    this.state.query = event.target.value\r\n    this.props.getProducts(this.state.query, 1, true);\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({ ...this.state, query: event.target.value, value: event.target.value })\r\n  }\r\n  handleSearch = () => {\r\n    this.props.getProducts(this.state.query, 1, true)\r\n  }\r\n  render() {\r\n    return (\r\n      <header className='header'>\r\n        {/* =====  headline =====  */}\r\n        <div className='headline'>\r\n          <div className='container-headline'>\r\n            <div className='list-services'>\r\n              <div className='text-intro'>\r\n                <p>Demo React Shopping App</p>\r\n              </div>\r\n              <ul className='menu'>\r\n                <li>\r\n                  <Link className='intro-project' to='/reactCv-shopping/about-us'>Giới thiệu</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to='/reactCv-shopping/list'>Đăng nhập</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to='/reactCv-shopping/registration'>Đăng kí</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* ===== end ===== */}\r\n\r\n        {/* container header */}\r\n        <div className='container-header'>\r\n          <div className='logo'>\r\n            <Link to='/reactCv-shopping/'><img src='assets/images/home.webp' atl='logo' /></Link>\r\n          </div>\r\n          <form className='form-search' onSubmit={() => <Link to='/reactCv-shopping/list'>{this.handleSearch()}</Link>}>\r\n            <input type='text' placeholder=' Tìm kiếm ' onChange={this.handleChange} query={this.props.query}></input>\r\n            <Link to='/reactCv-shopping/list' className='btn-submit'> <button onClick={this.handleSearch}>Search</button></Link>\r\n          </form>\r\n          <div className='logo-cart'>\r\n            <Link to='/reactCv-shopping/cart'>\r\n              Cart\r\n              <div>\r\n                <Cart />\r\n              </div>\r\n            </Link>\r\n\r\n          </div>\r\n        </div>\r\n        {/* ===== end ===== */}\r\n\r\n        {/* ===== famous query ===== */}\r\n        <div className='famous-query'>\r\n          <Link to='/reactCv-shopping/list'>\r\n            <Button variant='link' type='button' onClick={this.searchByMostView} value=\"Thời trang nữ\">Thời trang nữ</Button>\r\n          </Link>\r\n\r\n          <Link to='/reactCv-shopping/list'>\r\n            <Button variant='link' type='button' onClick={this.searchByMostView} value=\"Thời trang nam\">Thời trang nam</Button>\r\n          </Link>\r\n          <Link to='/reactCv-shopping/list'>\r\n            <Button variant='link' type='button' onClick={this.searchByMostView} value=\"Đầm nữ\">Đầm nữ</Button>\r\n          </Link>\r\n          <Link to='/reactCv-shopping/list'>\r\n            <Button variant='link' type='button' onClick={this.searchByMostView} value=\"Sandal nữ\">Sandal nữ</Button>\r\n          </Link>\r\n          <Link to='/reactCv-shopping/list'>\r\n            <Button variant='link' type='button' onClick={this.searchByMostView} value=\"Dép nam\">Dép nam</Button>\r\n          </Link>\r\n        </div>\r\n        {/* ===== end ===== */}\r\n      </header>\r\n    )\r\n  }\r\n}\r\nconst mapsStateToProps = state => ({\r\n  query: state.query,\r\n  value: state.value,\r\n  // auth: state.auth,\r\n  // username: state.username,\r\n  // password: state.password,\r\n  minPrice: state.minPrice,\r\n  maxPrice: state.maxPrice,\r\n  productBanner: state.productBanner\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  ...bindActionCreators({ getProducts, getHomeApi, getEvent }, dispatch)\r\n})\r\nexport default connect(mapsStateToProps, mapDispatchToProps)(Header);","import React from 'react';\r\n\r\nclass Footer extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                this is footer\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Header from './header';\r\nimport Footer from './footer';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getProducts, getEvent, getHomeApi } from '../../actions';\r\nimport './index.scss'\r\nclass Layout extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getProducts(this.props.query, 1);\r\n        this.props.getEvent();\r\n        this.props.getHomeApi();\r\n    }\r\n    render() {\r\n        let { status } = this.props\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <section className='container'>\r\n                {status == 'Start Loading...' && <img style={{ width: '200px' }} src='https://raw.githubusercontent.com/thanhptse27997/reactCv-shopping/gh-pages/assets/images/tploading.gif' />}\r\n                {this.props.children}\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products: state.products,\r\n    query: state.query,\r\n    page: state.page,\r\n    status: state.status\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators({ getProducts, getHomeApi, getEvent }, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport { getProducts, addToCart, getProduct } from '../../actions'\r\nimport { Button } from 'react-bootstrap'\r\nimport { faStar, faStarHalfAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './index.scss'\r\n\r\n\r\n\r\nclass Productcard extends React.Component {\r\n    handleAddToCart = index => {\r\n        this.props.addToCart(index)\r\n    }\r\n    showRating = rating => {\r\n        let result = [];\r\n        for (let i = 1; i <= rating; i++) {\r\n            result.push(<FontAwesomeIcon icon={faStar} className='icon-star' key={Math.random()} />)\r\n        }\r\n        for (let z = 5 - rating; z <= 5 - rating; z++) {\r\n            if (z < Math.round(z)) {\r\n                result.push(<FontAwesomeIcon icon={faStar} key={Math.random()} />)\r\n            }\r\n            if (z > Math.round(z)) {\r\n\r\n                result.push(<FontAwesomeIcon icon={faStarHalfAlt} className='icon-star' key={Math.random()} />)\r\n            }\r\n        }\r\n        for (let j = 1; j <= 5 - rating; j++) {\r\n            result.push(<FontAwesomeIcon icon={faStar} key={Math.random()} />)\r\n\r\n        }\r\n        return result\r\n    }\r\n    render() {\r\n        let { product, index } = this.props\r\n        return (\r\n            <div className='product'>\r\n                <div className='img-product'>\r\n                    <img src={product.img_url} />\r\n                    <Link to={`/detail?id=${product.id}&name=${product.name}&index=${index}`}>\r\n                        <button className='btn-go'>details</button>\r\n                    </Link>\r\n                    <button className='btn-add' onClick={() => this.handleAddToCart(index)}>add to </button>\r\n                </div>\r\n                <div className='info-product'>\r\n                    <span className='star-product' >\r\n                        {this.showRating(product.percent_star)}\r\n                    </span>\r\n                    <p>{product.name}</p>\r\n                    <p style={{ color: 'red' }}>{product.price.toLocaleString()}đ </p>\r\n                    {/* <Button variant='outline-info' style={{ fontSize: '12px' }} onClick={() => this.handleAddToCart(index)}>add to cart</Button> */}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    products: state.products,\r\n    category: state.category,\r\n    cart: state.cart,\r\n    loginStatus: state.loginStatus\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators({ getProducts, addToCart, getProduct }, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Productcard);","import React from 'react'\r\nimport Productcard from '../../../Atom/Productcard'\r\nimport { getProducts, addToCart, getEvent , getHomeApi } from '../../../actions'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport './index.scss'\r\nclass Listpage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='products-list'>\r\n                {this.props.products.map((item, index) =>\r\n                    <Productcard product={item} index={index} key={index} />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products: state.products,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators({ getProducts, addToCart, getEvent , getHomeApi }, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Listpage);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nclass Listbanner extends React.Component{\r\n    render(){\r\n        let {itemBanner} = this.props \r\n        return(\r\n            <div>\r\n                <img src={itemBanner.image} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    banner : state.banner\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators({  }, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Listbanner);","import React from 'react'\r\nimport Listbanner from './Listbanner'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport './index.scss'\r\nclass Banner extends React.Component {\r\n    render() {\r\n        return (\r\n                <Carousel className='banner container'>\r\n                {this.props.banner.map((item, index) =>\r\n                    <Carousel.Item key={index}>\r\n                        {item.title === 'HV_Motorbike_0307_3107' ?\r\n                            <Link to='/reactCv-shopping/eventbanner'>\r\n                                <Listbanner itemBanner={item} index={index} key={index} />\r\n                            </Link>\r\n                            : <Listbanner itemBanner={item} index={index} key={index} />\r\n                        }\r\n                    </Carousel.Item>\r\n                )}\r\n            </Carousel>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    banner: state.banner\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators({}, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Banner);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport Productcard from '../../../Atom/Productcard'\r\nimport Banner from './Banner'\r\nimport {getHomeApi , getProducts , getEvent , addToCart } from '../../../actions'\r\nclass Homepage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div class='home-page'>\r\n                <Banner />\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products: state.products,\r\n    query : state.query,\r\n    page : state.page\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators({ getProducts, addToCart, getEvent , getHomeApi }, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { IMAGE_URL } from '../../../../apis'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {getIndexImage} from '../../../../actions'\r\nclass DetailImages extends React.Component {\r\n\r\n    render() {\r\n        const { product, index } = this.props\r\n        const getImage = (index) => {\r\n            const indexImage = index\r\n            this.props.getIndexImage(indexImage)\r\n\r\n        }\r\n        return (\r\n            <Link to={`/detail?id=${product.id}&name=${product.name}&index=${index}`}>\r\n                <img onClick={() => getImage(index)} style={{ width: '50px' }} src={IMAGE_URL + product.images[index]} />\r\n            </Link>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapsStateToProps = state => ({\r\n    indexImage: state.indexImage\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators({ getIndexImage}, dispatch)\r\n})\r\nexport default connect(mapsStateToProps, mapDispatchToProps)(DetailImages);","import React from 'react'\r\nimport queryString from 'query-string';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getDetailProduct, addToCart_Detail, getIndexImage } from '../../../actions';\r\nimport DetailImages from './DetailImages';\r\nimport { Button, Row, Col, Container } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faChevronRight, faStar , faStarHalfAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { IMAGE_URL } from '../../../apis'\r\nimport { Link } from 'react-router-dom'\r\nclass Detailpage extends React.Component{\r\n    componentDidMount() {\r\n        const parsed = queryString.parse(window.location.search)\r\n        const id = parsed.id\r\n        this.props.getDetailProduct(id)\r\n\r\n    }\r\n\r\n    handleAddToCart_Detail = () => {\r\n        this.props.addToCart_Detail(this.props.product)\r\n    }\r\n    previousImage = () => {\r\n        let { product, indexImage } = this.props\r\n        console.log(indexImage - 1)\r\n        this.props.getIndexImage(indexImage - 1 == -1 ? indexImage = product.images.length - 1 : indexImage - 1)\r\n    }\r\n    nextImage = () => {\r\n        let { product, indexImage } = this.props\r\n        console.log(indexImage + 1)\r\n        this.props.getIndexImage(indexImage + 1 > product.images.length - 1 ? indexImage = 0 : indexImage + 1)\r\n    }\r\n\r\n    showRatingDetail = rating => {\r\n        let result = [];\r\n        for (let i = 1; i <= rating; i++) {\r\n            result.push(<FontAwesomeIcon icon={faStar} className='icon-star-detail' key={Math.random()} />)\r\n        }\r\n        for(let z = 5-rating ; z <= 5-rating ; z++){\r\n            if(z < Math.round(z)){\r\n                result.push(<FontAwesomeIcon icon={faStar} key={Math.random()} />)\r\n            }\r\n            if(z > Math.round(z)){\r\n                \r\n                result.push(<FontAwesomeIcon icon={faStarHalfAlt} className='icon-star-detail' key={Math.random()} />)\r\n            }\r\n        }\r\n        for (let j = 1; j <= (5 - rating); j++) {\r\n            result.push(<FontAwesomeIcon icon={faStar} key={Math.random()} />)\r\n        }\r\n        return result\r\n    }\r\n    render(){\r\n        let {product , indexImage , errMsg , status} = this.props\r\n        return(\r\n            <Container className='container-normal'>\r\n            {status == 'Start Loading...' && <img style={{ width: '200px' }} src='/tploading.gif' />}\r\n            {product ? <Row className='detail-page' >\r\n                <Col md={8}>\r\n                    <div className='firstImage'>\r\n                        <button className='previousImg' onClick={this.previousImage}><FontAwesomeIcon icon={faChevronLeft} /></button>\r\n                        <button className='nextImg' onClick={this.nextImage}><FontAwesomeIcon icon={faChevronRight} /></button>\r\n                        <img src={IMAGE_URL + product.images[indexImage]}></img>\r\n                    </div>\r\n                    <div>\r\n                        {product.images.map((item, index) =>\r\n                            <DetailImages item={item} product={product} index={index} key={index} />\r\n                        )}\r\n                    </div>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <div className='infoproduct'>\r\n                        <p> {this.showRatingDetail(product.rating_info.percent_star)}</p>\r\n                        <p>{product.name}</p>\r\n                        <p style={{ color: 'red' }}>{product.price.toLocaleString()}</p>\r\n                        <Button variant='outline-info' id='btn-addtocart' onClick={() => this.handleAddToCart_Detail()}>add to cart</Button>\r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n                : <div>\r\n                    <p style={{ color: 'red' }}>{errMsg}</p>\r\n                    <Link to='/thanhptse-Cv/porfolio/list'>Tiếp tục mua sắm nào</Link>\r\n                </div>\r\n            }\r\n\r\n        </Container>\r\n        )\r\n    }\r\n}\r\n\r\nDetailpage.defaultProps = {\r\n    product: undefined,\r\n    id: '',\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n    product: state.product,\r\n    index: state.index,\r\n    id: state.id,\r\n    cart: state.cart,\r\n    loginStatus: state.loginStatus,\r\n    indexImage: state.indexImage,\r\n    status: state.status,\r\n    errMsg: state.errMsg\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators({ getDetailProduct, addToCart_Detail, getIndexImage }, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detailpage);","import React from 'react'\r\n\r\nclass FinishOrder extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>1</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FinishOrder","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Layout from './Components/layout';\nimport Listpage from './Components/pages/Listpage';\nimport Homepage from './Components/pages/Homepage';\nimport Detailpage from './Components/pages/Detailpage';\nimport Cart from './Components/pages/Cart';\nimport Finishorder from './Components/pages/Finishorder';\n\n\n\nclass App extends React.Component{\n  render(){\n    return(\n      <React.Fragment>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path ='/reactCv-shopping/' component={Homepage} />\n            <Route exact path ='/reactCv-shopping/list' component={Listpage} />\n            <Route exact path ='/detail' component={Detailpage} />\n            <Route exact path ='/reactCv-shopping/cart' component={Cart} />\n            <Route exact path ='/reactCv-shopping/finishOrder' component={Finishorder} />\n          </Switch>\n        </Layout>\n      </Router>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    FILTER,\r\n    GET_PRODUCT,\r\n    GET_PRODUCTS_START,\r\n    GET_PRODUCTS_SUCCESS,\r\n    GET_PRODUCTS_FAIL,\r\n    LOGIN_START,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGIN_RESET,\r\n    ADD_TO_CART,\r\n    GET_PRICE_PRODUCT,\r\n    DELETE_PRODUCT,\r\n    ADD_TO_CART_DETAIL,\r\n    GET_MIN_PRICE,\r\n    GET_MAX_PRICE,\r\n    GET_INDEX_IMAGE,\r\n    GET_PRODUCT_FAIL,\r\n    GET_BANNER,\r\n    GET_EVENT_BANNER\r\n} from './actions';\r\n\r\nconst initialState = {\r\n    products: [\r\n\r\n    ],\r\n    minPrice: 0,\r\n    maxPrice: 0,\r\n    category: '',\r\n    product: undefined, // product detail\r\n    index: -1,\r\n    id: '',\r\n    errMsg: '',\r\n    status: 'Start Loading...',\r\n    page: 1,\r\n    auth: {\r\n\r\n        isLogged: false,\r\n        message: ''\r\n    },\r\n    cart: [],\r\n    query: ' nokia ',\r\n    loginStatus: false,\r\n    totalPriceOfProduct: [],\r\n    quantityProduct: [],\r\n    value: '',\r\n    isFilter: false,\r\n    indexImage: 0,\r\n    banner :[],\r\n    productBanner : undefined,\r\n    productEventBanner : []\r\n\r\n\r\n\r\n\r\n\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FILTER: {\r\n            let newPBP = state.products\r\n            newPBP.sort((a, b) => {\r\n                switch (action.value) {\r\n                    case 'lowToHigh': {\r\n                        return a.price - b.price\r\n                    }\r\n                    case 'highToLow': {\r\n                        return b.price - a.price\r\n                    }\r\n\r\n                }\r\n            })\r\n            return { ...state, value: action.value }\r\n        }\r\n\r\n        case GET_PRODUCT: {\r\n\r\n\r\n            return { ...state, product: action.product, image: action.image }\r\n        }\r\n        case GET_PRODUCTS_START: {\r\n            return { ...state, products: action.isNewSearch ? [] : state.products, status: 'Start Loading...', value: action.isNewSearch ? '' : state.value }\r\n        }\r\n        case GET_MIN_PRICE: {\r\n            return { ...state, minPrice: action.minPrice }\r\n        }\r\n        case GET_MAX_PRICE: {\r\n            return { ...state, maxPrice: action.maxPrice }\r\n        }\r\n        case GET_PRODUCTS_SUCCESS: {\r\n            const { minPrice, maxPrice } = state\r\n            const newProducts = [...state.products, ...action.products]\r\n            const newProductsFFilter = newProducts.filter((product) => {\r\n                return parseInt(product.price, 10) < maxPrice\r\n            })\r\n            const newProductsSFilter = newProductsFFilter.filter((product) => {\r\n                return parseInt(product.price, 10) > minPrice\r\n            })\r\n            return {\r\n                ...state, products: action.isFilter ? newProductsSFilter : newProducts.filter(product => product.percent_star != 0).sort((a,b)=>{\r\n                    if(a.percent_star < b.percent_star)\r\n                    return -1\r\n                    else return 0\r\n                })\r\n                , status: 'Success', page: action.page, errMsg: '', query: action.query, isFilter: action.isFilter\r\n            }\r\n\r\n        }\r\n\r\n        case GET_PRODUCTS_FAIL: {\r\n            return { ...state, errMsg: action.errMsg, status: 'Fail' }\r\n        }\r\n        case GET_PRODUCT_FAIL: {\r\n            return { ...state, product: undefined, status: 'Fail', errMsg: action.errMsg }\r\n        }\r\n        case ADD_TO_CART: {\r\n            let { cart, products, product, totalPriceOfProduct, quantityProduct } = state\r\n            const selected_Product = products[action.index]\r\n\r\n\r\n            if (cart.findIndex(x => x.id === selected_Product.id) >= 0) {\r\n                quantityProduct[cart.indexOf(selected_Product)] += action.quantity\r\n                totalPriceOfProduct[cart.indexOf(selected_Product)] += selected_Product.price\r\n            }\r\n            else {\r\n                cart.push(selected_Product)\r\n                totalPriceOfProduct.push(selected_Product.price)\r\n                quantityProduct.push(action.index = action.quantity)\r\n            }\r\n\r\n            return { ...state, cart: [...cart], totalPriceOfProduct: [...totalPriceOfProduct], quantityProduct: [...quantityProduct] }\r\n\r\n        }\r\n\r\n        case ADD_TO_CART_DETAIL: {\r\n            const { cart, product, totalPriceOfProduct, quantityProduct } = state\r\n            cart.push(product)\r\n            totalPriceOfProduct.push(product.price)\r\n            quantityProduct.push(action.quantity)\r\n            return { ...state, cart: [...cart], totalPriceOfProduct: [...totalPriceOfProduct], quantityProduct: [...quantityProduct] }\r\n        }\r\n\r\n        case GET_PRICE_PRODUCT: {\r\n            const { totalPriceOfProduct, quantityProduct } = state\r\n            totalPriceOfProduct[action.index] = action.priceIndex\r\n            quantityProduct[action.index] = action.quantity++\r\n\r\n\r\n            return { ...state, totalPriceOfProduct: [...totalPriceOfProduct], quantityProduct: [...quantityProduct] }\r\n        }\r\n\r\n        case DELETE_PRODUCT: {\r\n            const { cart, totalPriceOfProduct, quantityProduct } = state\r\n            let i = action.index\r\n            cart.splice(i, 1)\r\n            totalPriceOfProduct.splice(i, 1)\r\n            quantityProduct.splice(i, 1)\r\n            return { ...state, cart: [...cart], totalPriceOfProduct: [...totalPriceOfProduct], quantityProduct: [...quantityProduct] }\r\n        }\r\n        case GET_INDEX_IMAGE: {\r\n            return { ...state, indexImage: action.indexImage }\r\n        }\r\n\r\n        case LOGIN_START: {\r\n            return { ...state, auth: { isLogged: false, message: '' } }\r\n        }\r\n        case LOGIN_SUCCESS: {\r\n            return { ...state, auth: action.auth, loginStatus: true }\r\n        }\r\n        case LOGIN_FAIL: {\r\n            return { ...state, auth: action.auth }\r\n        }\r\n        case LOGIN_RESET: {\r\n            return { ...state, auth: { isLogged: false, message: 'logout success' }, cart: [], totalPriceOfProduct: [], quantityProduct: [], loginStatus: false }\r\n        }\r\n\r\n        case GET_BANNER :{\r\n            return {...state , banner : action.banner }\r\n        }\r\n        case GET_EVENT_BANNER:{\r\n            return {...state , productEventBanner : action.eventBanner}\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport reducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst logger = ({ getState }) => {\r\n    return next => action => {\r\n        console.log('will dispatch', action)\r\n        const returnValue = next(action)\r\n        console.log('state after dispatch',getState())\r\n\r\n        return returnValue;\r\n    }\r\n\r\n}\r\n\r\n\r\nconst middleware = [logger,thunk];\r\n\r\nconst enhancer = compose(applyMiddleware(...middleware))\r\n\r\nconst store = createStore(reducer,enhancer)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport {Provider} from 'react-redux';\n// import './bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <Provider store ={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n// ReactDOM.render(<Provider store ={store}><App/></Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}